// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  fullName  String?
  email     String     @unique
  password  String
  role      RoleEnum   @default(MEMBER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  biografi  String?
  username  String?
  following Follow[]   @relation("Following")
  follower  Follow[]   @relation("Followers")
  Threads   Thread[]
  Comments  Comments[]
  Like      Like[]

  @@map("users")
}

model Thread {
  id           Int        @id @default(autoincrement())
  title        String?
  content      String?
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Image        String?
  likeCount    Int?       @default(0)
  commentCount Int?       @default(0)
  Like         Like[]
  comments     Comments[]

  @@map("threads")
}

model Comments {
  id         Int      @id @default(autoincrement())
  content    String?
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Thread     Thread   @relation(fields: [threadId], references: [id])
  threadId   Int
  likesCount Int?     @default(0)
}

model Follow {
  id         Int  @id @default(autoincrement())
  followerId Int
  follower   User @relation("Followers", fields: [followerId], references: [id])

  followingId Int
  following   User @relation("Following", fields: [followingId], references: [id])

  createdAt DateTime @default(now())

  @@unique([followerId, followingId])
}

model Like {
  id       Int @id @default(autoincrement())
  userId   Int
  threadId Int

  user User   @relation(fields: [userId], references: [id])
  post Thread @relation(fields: [threadId], references: [id])

  cratedAt DateTime @default(now())

  @@unique([userId, threadId])
  @@map("like")
}

enum RoleEnum {
  ADMIN
  MEMBER
}
